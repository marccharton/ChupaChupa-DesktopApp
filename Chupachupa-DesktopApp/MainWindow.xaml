<controls:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:Behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="Chupachupa_DesktopApp.MainWindow"
    xmlns:ns="clr-namespace:Chupachupa_DesktopApp.ViewModel"
    Title="ChupaChupa" 
    Height="600" Width="800" 
    ShowIconOnTitleBar="True" 
    EnableDWMDropShadow="True" 
    WindowStartupLocation="CenterScreen" 
    WindowTransitionsEnabled="False">
    <controls:MetroWindow.DataContext>
        <ns:ViewModelDataSource />
    </controls:MetroWindow.DataContext>

    <controls:MetroWindow.Resources>
        <ns:InvertBoolConverter x:Key="InvertBoolConverter"/>
        <DataTemplate x:Key="FlyoutCategoryListItemTemplate">
        	<Grid Width="Auto" Height="Auto">
        		<TextBlock TextWrapping="Wrap" Text="{Binding Name}"/>
        	</Grid>
        </DataTemplate>
    </controls:MetroWindow.Resources>

    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout x:Name="AddChannelFlyout" Header="Add Channel"
                             Position="Right"
                             Theme="Inverse" IsOpen="{Binding IsFlyoutAddChannelOpenned}" Panel.ZIndex="47" Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:MetroWindow}, Path=ActualWidth}">
                <Grid Margin="10"
                      Width="400">
                    <StackPanel>
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5" ><Run Text="Name mais apres ce sera link !!!!!!!"/></TextBlock>
                        <TextBox TextWrapping="Wrap" HorizontalAlignment="Left" Width="200" Margin="0,5" Text="{Binding CurrentChannel.Link}"/>
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5" Text="Category" />
                        <ComboBox x:Name="AddChannelFlyoutCategoryList" HorizontalAlignment="Left" Width="200" ItemsSource="{Binding CategoryList}" ItemTemplate="{DynamicResource FlyoutCategoryListItemTemplate}"/>
                    </StackPanel>
                    <Button x:Name="AddChannelOkButton" Content="OK" Command="{Binding AddChannelCmdValidate}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10"/>
                    <!--<Button x:Name="AddChannelCancelButton" Content="Cancel" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10"/>-->
                </Grid>
            </controls:Flyout>

            <controls:Flyout x:Name="EditChannelFlyout" Header="Edit Channel"
                             Position="Right" Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:MetroWindow}, Path=ActualWidth}"
                             Theme="Inverse" IsOpen="{Binding IsFlyoutEditChannelOpenned}" Panel.ZIndex="47" >
                <Grid Margin="10"
                      Width="400">
                    <StackPanel>
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5" ><Run Text="Link"/></TextBlock>
                        <TextBox TextWrapping="Wrap" HorizontalAlignment="Left" Width="200" Margin="0,5" Text="{Binding CurrentChannel.Link}"/>
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5" Text="Category" />
                        <ComboBox x:Name="EditChannelFlyoutCategoryList" HorizontalAlignment="Left" Width="200" ItemsSource="{Binding CategoryList}" ItemTemplate="{DynamicResource FlyoutCategoryListItemTemplate}"/>
                    </StackPanel>
                    <Button x:Name="EditChannelOkButton" Content="OK" Command="{Binding EditChannelCmdValidate}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10" />
                    <!--<Button x:Name="EditChannelCancelButton" Content="Cancel" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10"/>-->
                </Grid>
            </controls:Flyout>



            <controls:Flyout x:Name="SettingsFlyout" Header="Settings"
                             Position="Right"
                             Theme="Inverse"  Panel.ZIndex="47" IsOpen="{Binding IsSettingsFloutOppenned}" Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:MetroWindow}, Path=ActualWidth}">
                <Grid Margin="10"
                      Width="400">
                    <StackPanel>

                    </StackPanel>
                    <Button x:Name="SettingsOkButton" Content="OK" Command="{Binding ViewSettingsCmdValidate}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10"/>
                    <!--<Button x:Name="AddChannelCancelButton" Content="Cancel" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10"/>-->
                </Grid>
            </controls:Flyout>




        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>
    


    <Grid>
        <TabControl SelectedIndex="{Binding SelectedTabIndex}" IsEnabled="{Binding IsTabControlEnabled}">
            <TabItem x:Name="Account" Header="Account">
                <Grid Background="GhostWhite">
                    <StackPanel HorizontalAlignment="Center" Height="397" VerticalAlignment="Center" Width="371.5">
                        <Image Source="Assets/img/logo.png" HorizontalAlignment="Center" Height="227.5"/>
                        <TextBox IsEnabled="{Binding Path=IsLoggedIn, Converter={StaticResource InvertBoolConverter}}" controls:TextBoxHelper.Watermark="Login" x:Name="AccountLoginTextBox" HorizontalAlignment="Center" Height="23" TextWrapping="Wrap" Text="{Binding AccountLoginText}" VerticalAlignment="Top" Width="120" />
                        <PasswordBox IsEnabled="{Binding Path=IsLoggedIn, Converter={StaticResource InvertBoolConverter}}" controls:TextBoxHelper.Watermark="Password" x:Name="AccountPassTextBox" HorizontalAlignment="Center" Height="23" PasswordChar="{Binding AccountPasswordText}" VerticalAlignment="Top" Width="120" Margin="0,5,0,5" />
                        <Button Command="{Binding LogUserCmd}" x:Name="AccountButton" Content="{Binding LogMessage}" HorizontalAlignment="Center" VerticalAlignment="Top" Width="120" Style="{DynamicResource AccentedSquareButtonStyle}" Margin="0,5,0,5"/>
                        <controls:ProgressRing IsActive="{Binding IsProgressRingActive}" Margin="0,10"/>
                    </StackPanel>
                </Grid>
            </TabItem>


            <TabItem x:Name="Categories" Header="Categories" IsEnabled="{Binding Path=IsLoggedIn}">
                <Grid x:Name="CategoryMainContainer" Background="GhostWhite">
                    <!--<Button x:Name="CategoryEditButton" Command="{Binding EditCategoryCmd}" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top"  Style="{DynamicResource SquareButtonStyle}" Height="28" Margin="10,10,0,0" Width="60"/>-->
                    <Button x:Name="CategoryAddButton" Command="{Binding AddCategoryCmd}" Content="Add" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{DynamicResource SquareButtonStyle}" Margin="17,10,0,0" Height="28" Width="60"/>
                    <!--<Button x:Name="CategoryDeleteButton" Command="{Binding DeleteCategoryCmd}" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{DynamicResource SquareButtonStyle}" Margin="140,10,0,0" Height="28" Width="60"/>-->
                    <controls:Tile x:Name="allButton" Title="ALL" TiltFactor="4" Width="Auto" Height="Auto" HorizontalAlignment="Right" Margin="0" />
                    <ListView x:Name="CategoriesListView" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="10,47.45,123.5,10" 
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
						     ItemsSource="{Binding CategoryList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             SelectedItem="{Binding SelectedCategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding LoadCategoryCmd}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Style.Triggers>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                        <Setter Property="IsSelected" Value="True" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="EDIT" Command="{Binding EditCategoryCmd}">
                                    <MenuItem.Icon>
                                        <Image Width="16" Height="16" Source="Assets/img/ico/edit.ico" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="DELETE" Command="{Binding DeleteCategoryCmd}">
                                    <MenuItem.Icon>
                                        <Image Width="16" Height="16" Source="Assets/img/ico/delete.ico" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <controls:Tile Title="{Binding Name}" Count="{Binding RssChannels.Count}" TiltFactor="1" Width="147px" Height="147px" Margin="0">
                                </controls:Tile>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>

                </Grid>
            </TabItem>


            <TabItem x:Name="Channels" IsEnabled="{Binding Path=IsLoggedIn}" Header="Channels" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,0,-12,-0.001">
                <Grid Background="GhostWhite">
                    <Label HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0" Height="53.46" FontFamily="Segoe UI Semibold" FontSize="29.333" Foreground="#FF838383" Content="{Binding CurrentCategory.Name}"/>
                    <!--<Button x:Name="ChannelsEditButton" Command="{Binding EditChannelCmd}" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top"  Style="{DynamicResource SquareButtonStyle}" Height="28" Margin="10,68.46,0,0" Width="60"/>-->
                    <Button x:Name="ChannelsAddButton" Command="{Binding AddChannelCmd}" Content="Add" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{DynamicResource SquareButtonStyle}" Margin="17,68.46,0,0" Height="28" Width="60"/>
                    <!--<Button x:Name="ChannelsDeleteButton" Command="{Binding DeleteChannelCmd}" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{DynamicResource SquareButtonStyle}" Margin="140,68.46,0,0" Height="28" Width="60"/>-->
                    <ListView x:Name="ChannelsListView" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"
						ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
						ItemsSource="{Binding ChannelsList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        SelectedItem="{Binding SelectedChannel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,100,10,10">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding LoadChannelCmd}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Style.Triggers>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                        <Setter Property="IsSelected" Value="True" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="EDIT" Command="{Binding EditChannelCmd}">
                                    <MenuItem.Icon>
                                        <Image Width="16" Height="16" Source="Assets/img/ico/edit.ico" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="DELETE" Command="{Binding DeleteChannelCmd}">
                                    <MenuItem.Icon>
                                        <Image Width="16" Height="16" Source="Assets/img/ico/delete.ico" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <controls:Tile Title="{Binding Title}" Count="{Binding RssItems.Count}" TiltFactor="1" Width="147px" Height="147px" Background="Crimson" />
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>
                </Grid>
            </TabItem>


            <TabItem x:Name="Items" IsEnabled="{Binding Path=IsLoggedIn}" Header="Items" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Grid Background="GhostWhite">
                    <Label HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0" Height="51.46" Background="#00000000" FontSize="29.333" FontFamily="Segoe UI Semibold" Foreground="#FF838383" Content="{Binding CurrentChannel.Title}"/>
                    <ListView x:Name="ArticlesListView" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"
						ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
						ItemsSource="{Binding ItemsList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,100,10,10">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding LoadItemCmd}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Style.Triggers>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                        <Setter Property="IsSelected" Value="True" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <controls:Tile Title="{Binding Description}" Count="{Binding Title}" TiltFactor="1" Width="350px" Height="147px" Background="BurlyWood" />
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>
                </Grid>
            </TabItem>


            <TabItem x:Name="Viewer" IsEnabled="{Binding Path=IsLoggedIn}" Header="Viewer" HorizontalAlignment="Left" Height="39.4733333333333" VerticalAlignment="Top" Width="90">
                <Grid Background="GhostWhite">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="135*"/>
                        <RowDefinition Height="127*"/>
                    </Grid.RowDefinitions>
                    <Image x:Name="Image" HorizontalAlignment="Center" VerticalAlignment="Top" Source="Assets/img/chupa_chups_chuck.jpg" Width="230.5" Height="224.797" Margin="0,11,0,0"/>
                    <Label Grid.Row ="0" x:Name="Source" Content="{Binding CurrentItem.Source.Url}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,230,0,0" Foreground="#FF3264BD" FontWeight="Bold" IsManipulationEnabled="True"/>
                    <RichTextBox x:Name="Description" Grid.Row="1" Height="266" Background="{x:Null}" HorizontalAlignment="Center" IsReadOnly="True" FontFamily="Segoe UI Semibold" FontSize="21.333" BorderBrush="{x:Null}" Foreground="#FF5D5D5D" Width="574" Margin="106,0,106,-12.23" BorderThickness="0">
                        <FlowDocument>
                            <Paragraph>
                                <Run Text="{Binding CurrentItem.Description}"/>
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                    <StackPanel Grid.Row ="0" HorizontalAlignment="Right" Margin="0,0,10,0">
                        <TextBlock x:Name="Title" TextWrapping="Wrap" Text="{Binding CurrentItem.Title}" FontWeight="Bold" FontFamily="Segoe UI Semibold" FontSize="18.667">
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.HotTrackColorKey}}"/>
                            </TextBlock.Foreground>
                        </TextBlock>
                        <DatePickerTextBox TextWrapping="Wrap" Text="{Binding CurrentItem.PubDate.Value.Date, Mode=OneWay}"/>
                    </StackPanel>
                </Grid>
            </TabItem>


        </TabControl>
        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal" Margin="0,10,10,0">
        	<TextBlock x:Name="UserName" HorizontalAlignment="Right" TextWrapping="Wrap" VerticalAlignment="Top" FontFamily="Segoe UI Semibold" FontSize="18.667" Text="{Binding CurrentUser.LoginMail}" Margin="0">
                <TextBlock.Foreground>
                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}"/>
                </TextBlock.Foreground>
                <Run Language="fr-fr" Text="{Binding CurrentUser.LoginMail}"/>
            </TextBlock>
        	<Image x:Name="userLogo" HorizontalAlignment="Right" Height="25" VerticalAlignment="Top" Width="25" Source="user.ico" IsManipulationEnabled="True" Margin="5,0,0,0"/>
            <StackPanel.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Log OUT" IsEnabled="{Binding IsLoggedIn}"  Command="{Binding LogUserCmd}">
                        <MenuItem.Icon>
                            <Image Width="16" Height="16" Source="Assets/img/ico/logOUT.ico" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Settings" Command="{Binding ViewSettingsCmd}">
                        <MenuItem.Icon>
                            <Image Width="16" Height="16" Source="Assets/img/ico/settings.ico" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </StackPanel.ContextMenu>
        </StackPanel>
        <TextBlock x:Name="DEBUG" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Bottom" FontFamily="Segoe UI Semibold" FontSize="18.667" Margin="10,0,0,10">
            <TextBlock.Foreground>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}"/>
            </TextBlock.Foreground><Run Language="fr-fr" Text="{Binding DebugText}"/>
        </TextBlock>
        <Button MinWidth="90"
                    Command="{Binding ElementName=flyoutsDemo, Path=OpenFirstFlyoutCommand}"
                    Content="Show 1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="10,0,0,39.83" />


    </Grid>


</controls:MetroWindow>
